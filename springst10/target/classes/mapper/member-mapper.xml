<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="Member">

<!-- member mapper -> dao -> service -> controller 순으로 작성-->

	<resultMap id="resultMember" type="Member">
	<id property="id" column="ID"/> <!-- oracle 참고/ 프라이머리키에 해당 -->
	<result property="passwd" column="PASSWD" />
	<result property="name" column="NAME" />
	<result property="email" column="EMAIL" />
	<result property="gender" column="GENDER" />
	<result property="age" column="AGE" />
	<result property="phone" column="PHONE" />
	<result property="address" column="ADDRESS" />
	<result property="enrollDate" column="ENROLL_DATE"/>
	</resultMap>

	<!-- member table의 모든 데이터 select -->
<select id="selectMemberAll" resultMap="resultMember"> <!-- resultType="Member" -->
SELECT * FROM MEMBER    <!-- 자바로 끌고 들어올 수 있다 -->
</select>

<!-- member 하나만 가져오는 select -->
<select id="selectMember" parameterType="string" resultMap="resultMember"> <!-- 파라미터에 데이터1개면 스트링 자료형 쓰기. dao에서 문자열이 넘어온다 -->
SELECT * FROM MEMBER WHERE ID= #{userid} <!-- select할때는 id만 알면 가져올 수 있으니 -->
</select>

<!-- member Insert -->
<insert id="insertMember" parameterType="Member"> <!--member안에 있는  id,name,등 정보가 들어가니까 member로. parametertype은 멤버에서 오는 값.-->
INSERT INTO MEMBER(id, name, passwd, ENROLL_DATE) VALUES(#{id},#{name},#{passwd},SYSDATE)<!-- JAVA에서 날짜 생성해 가져오지 않고 오라클에서 가져올 경우SYSDATE -->
</insert>

<!-- member Update -->
<update id="updateMember" parameterType="Member">
UPDATE MEMBER SET NAME=#{name}, PASSWD=#{passwd} WHERE ID=#{id}
</update>

<!-- delete UpdateMember // member로 해줘도 되지만 아이디만 알면 삭제 가능하기 때문에 string해줘도 됨-->
<delete id="deleteMember" parameterType="Member">
DELETE FROM MEMBER WHERE ID=#{id}  <!-- 필드값 정확히 입력하기 -->
</delete>

</mapper>


